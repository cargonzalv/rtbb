// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package bidder is a generated GoMock package.
package bidder

import (
	reflect "reflect"

	fasthttprouter "github.com/buaazp/fasthttprouter"
	gomock "github.com/golang/mock/gomock"
)

// MockRouter is a mock of Router interface.
type MockRouter struct {
	ctrl     *gomock.Controller
	recorder *MockRouterMockRecorder
}

// MockRouterMockRecorder is the mock recorder for MockRouter.
type MockRouterMockRecorder struct {
	mock *MockRouter
}

// NewMockRouter creates a new mock instance.
func NewMockRouter(ctrl *gomock.Controller) *MockRouter {
	mock := &MockRouter{ctrl: ctrl}
	mock.recorder = &MockRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouter) EXPECT() *MockRouterMockRecorder {
	return m.recorder
}

// AddRoutes mocks base method.
func (m *MockRouter) AddRoutes(router *fasthttprouter.Router) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddRoutes", router)
}

// AddRoutes indicates an expected call of AddRoutes.
func (mr *MockRouterMockRecorder) AddRoutes(router interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRoutes", reflect.TypeOf((*MockRouter)(nil).AddRoutes), router)
}
